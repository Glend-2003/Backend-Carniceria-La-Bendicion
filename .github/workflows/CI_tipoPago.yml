name: CI/CD Pipeline - Carnicer√≠a La Bendici√≥n

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: bdcarniceria
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Wait for MySQL
      run: |
        until docker exec ${{ job.services.mysql.id }} mysqladmin ping --silent; do
          echo 'Waiting for MySQL...'
          sleep 2
        done
    
    - name: Run Unit Tests
      run: |
        echo "üß™ Ejecutando pruebas unitarias..."
        mvn test -Dtest=TipoPagoServiceTest
        
    - name: Run Integration Tests
      run: |
        echo "üîó Ejecutando pruebas de integraci√≥n..."
        mvn test -Dtest=TipoPagoControllerTest
        
    - name: Generate Test Report
      run: |
        echo "üìä Generando reporte de pruebas..."
        mvn surefire-report:report
        
    - name: Build Application
      run: |
        echo "üèóÔ∏è Construyendo aplicaci√≥n..."
        mvn clean package -DskipTests
        
    - name: Send Email Notification on Success
      if: success()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: ‚úÖ Pipeline Exitoso - Carnicer√≠a La Bendici√≥n
        body: |
          ¬°Excelente trabajo! üéâ
          
          Las pruebas automatizadas han pasado exitosamente:
          - ‚úÖ Pruebas unitarias del servicio TipoPago
          - ‚úÖ Pruebas de integraci√≥n del controlador
          - ‚úÖ Construcci√≥n de la aplicaci√≥n
          
          Commit: ${{ github.sha }}
          Rama: ${{ github.ref }}
          
          El c√≥digo est√° listo para fusionar a MAIN.
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: Carnicer√≠a CI/CD
        
    - name: Send Email Notification on Failure
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: ‚ùå Pipeline Fallido - Carnicer√≠a La Bendici√≥n
        body: |
          ¬°Atenci√≥n! ‚ùå
          
          El pipeline ha fallado. Revisa los siguientes puntos:
          - Errores en las pruebas unitarias
          - Problemas en las pruebas de integraci√≥n
          - Fallos en la construcci√≥n
          
          Commit: ${{ github.sha }}
          Rama: ${{ github.ref }}
          
          Por favor, revisa los logs para m√°s detalles.
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: Carnicer√≠a CI/CD

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Merge to Main
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git fetch origin main
        git checkout main
        git merge origin/dev-qa --no-edit
        git push origin main
        
    - name: Deploy to Production
      run: |
        echo "üöÄ Desplegando a producci√≥n..."
        # Aqu√≠ agregar√≠as los comandos espec√≠ficos de despliegue
        # Por ejemplo: scp, rsync, o comandos FTP
        echo "Aplicaci√≥n desplegada exitosamente"
        
    - name: Send Deployment Notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: üöÄ Despliegue Exitoso - Carnicer√≠a La Bendici√≥n
        body: |
          ¬°Despliegue completado! üöÄ
          
          La aplicaci√≥n ha sido desplegada exitosamente a producci√≥n:
          - ‚úÖ Fusi√≥n autom√°tica DEV-QA ‚Üí MAIN
          - ‚úÖ Despliegue a servidor de producci√≥n
          
          Commit: ${{ github.sha }}
          
          La nueva versi√≥n est√° disponible.
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: Carnicer√≠a CI/CD

